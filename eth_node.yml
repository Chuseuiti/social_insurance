---
- hosts: all
  sudo: yes
  vars:
    username: ubuntu
  tasks:

    - name: Install eth node 1
      command: echo 'Y' | apt-get software-properties-common 

    - name: Install eth node 2
      command: add-apt-repository -y ppa:ethereum/ethereum

    - name: Install eth node 3
      command: apt-get update

    - name: Install eth node 4
      apt: pkg=ethereum update_cache=yes

echo 'Y' | sudo apt-get install npm 

ln -s /usr/bin/nodejs /usr/bin/node

npm install -g ethereum-console


mkdir data_dir

geth --datadir data_dir/ init genesis_block.json

geth --fast --cache 512 --ipcpath ~/Library/Ethereum/geth.ipc --networkid 1234 --datadir data_dir/  console 

mv keystore data_dir/keystore # I overwrite the new accounts

## GETH CONSOLE ##
# connect to other nodes

admin.nodeInfo

admin.addPeer("YOURNODEURL")

web3.admin.net.connect("YOURIP:30303")

# create an account
personal.newAccount("Write here a good, randomly generated, passphrase!") # Address 0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa
web3.eth.accounts


var primaryAccount = web3.eth.accounts[0] # primaryAccount=0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa
web3.eth.getBalance('0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa')

# Solidity installation -- outside geth


npm install -g solc

solcjs --bin --abi --optimize -o bin contract.sol

# Deploying contract -- geth -- another miner has to be running 

eth.defaultAccount = '0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa';

personal.unlockAccount('0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa', "Write here a good, randomly generated, passphrase!");

var browser_ballot_sol_blacklisterContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"address_request","type":"address"}],"name":"secure","outputs":[{"name":"message","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"blacklisted","type":"address"}],"name":"set_address_blacklist","outputs":[{"name":"message","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"whitelisted_address","type":"address"}],"name":"set_address_whitelist","outputs":[{"name":"message","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]);
var browser_ballot_sol_blacklister = browser_ballot_sol_blacklisterContract.new(
   {
     from: '0x246f159b1ac94cd6219f7f36ad05fced75ba8bfa', 
     data: '0x6060604052341561000f57600080fd5b6103368061001e6000396000f3006060604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166390ed321b811461005b578063a22ccb19146100f1578063e049424714610110575b600080fd5b341561006657600080fd5b61007a600160a060020a036004351661012f565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100b657808201518382015260200161009e565b50505050905090810190601f1680156100e35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156100fc57600080fd5b61007a600160a060020a0360043516610231565b341561011b57600080fd5b61007a600160a060020a0360043516610293565b6101376102f8565b600160a060020a03821660009081526020819052604090205460ff1615156101945760408051908101604052601281527f43616e63656c207472616e73616374696f6e00000000000000000000000000006020820152905061022c565b600160a060020a03821660009081526020819052604090205460ff161515600114156101f55760408051908101604052601381527f417070726f7665207472616e73616374696f6e000000000000000000000000006020820152905061022c565b60408051908101604052600d81527f56616c756520756e6b6e6f776e00000000000000000000000000000000000000602082015290505b919050565b6102396102f8565b600160a060020a03821660009081526020819052604090819020805460ff191690558051908101604052601981527f536176656420626c61636b6c6973746564206164647265737300000000000000602082015292915050565b61029b6102f8565b600160a060020a03821660009081526020819052604090819020805460ff191660011790558051908101604052601781527f53617665642077686974656c6973742061646472657373000000000000000000602082015292915050565b602060405190810160405260008152905600a165627a7a72305820c902529ae6faa5a5894e5bb0edf3e0b8b89c557fd7d86d30e1b7e67245ec46f10029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
#0xc10d7d8c1b8ac034263eeaf3227544e852723484
miner.start() # -- Once finished the DAG and started mining then test contract

var blacklister = eth.contract(browser_ballot_sol_blacklister.abi).at(browser_ballot_sol_blacklister.address);
var input = 0xc10d7d8c1b8ac034263eeaf3227544e852723484;
var a = blacklister.secure(0xc10d7d8c1b8ac034263eeaf3227544e852723484);
var a1 = blacklister.set_address_blacklist(0xc10d7d8c1b8ac034263eeaf3227544e852723484);
var a2 = blacklister.set_address_whitelist(0xc10d7d8c1b8ac034263eeaf3227544e852723484);
eth.getTransaction(a)
